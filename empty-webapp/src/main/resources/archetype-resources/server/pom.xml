<?xml version="1.0" encoding="UTF-8"?>
#set( $dollar = '$' )
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>${groupId}</groupId>
    <artifactId>${rootArtifactId}</artifactId>
    <version>${version}</version>
  </parent>

  <artifactId>${artifactId}</artifactId>
  <packaging>war</packaging>

  <properties>
    <webappDirectory>${dollar}{project.build.directory}/${dollar}{project.build.finalName}</webappDirectory>
  </properties>

  <dependencies>
    <dependency>
      <groupId>${dollar}{project.groupId}</groupId>
      <artifactId>${rootArtifactId}-shared</artifactId>
      <version>${dollar}{project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.gwtproject</groupId>
      <artifactId>gwt-servlet</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <scope>provided</scope>
    </dependency>
  </dependencies>

  <build>
    <!-- Generate compiled stuff in the folder used for developing mode -->
    <!-- but eclipse need separate src/test output directory -->
    <!-- <outputDirectory>${dollar}{webappDirectory}/WEB-INF/classes</outputDirectory> -->
    <!-- hacker we missed compile phase for generated-sources, so compile it at testCompile phase -->
    <testOutputDirectory>${dollar}{webappDirectory}/WEB-INF/classes</testOutputDirectory>	 
    <testSourceDirectory>${dollar}{project.build.directory}/generated-sources/annotations</testSourceDirectory>	 

    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.eclipse.jetty</groupId>
          <artifactId>jetty-maven-plugin</artifactId>
          <configuration>
            <skip>false</skip>
            <scan>1</scan>
            <webApp>
              <!-- <extraClasspath>${basedir}/../risetek.usbtools-shared/target/classes/</extraClasspath> -->
            </webApp>
            <contextXml>${dollar}{basedir}/src/main/jettyconf/context.xml</contextXml>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
        <plugin>
        <artifactId>maven-war-plugin</artifactId>
            <configuration>
              <packagingExcludes>
                <!-- XXX: GWTP invoke gwt-user which do not used by server side -->
                WEB-INF/lib/gwt-user-*.jar,
                META-INF/**,
              </packagingExcludes>
            </configuration>
          </plugin>
        </plugins>
      </build>

  <profiles>
    <profile>
      <!-- XXX: We want to exclude ${rootArtifactId}-client from 'env-dev' profile, Maven forces us to make a 'env-prod' profile -->
      <id>env-prod</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <dependencies>
        <dependency>
          <groupId>${dollar}{project.groupId}</groupId>
          <artifactId>${rootArtifactId}-client</artifactId>
          <version>${dollar}{project.version}</version>
          <type>war</type>
          <scope>runtime</scope>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>env-dev</id>
      <activation>
        <property>
          <name>env</name>
          <value>dev</value>
        </property>
      </activation>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.eclipse.jetty</groupId>
              <artifactId>jetty-maven-plugin</artifactId>
              <configuration>
                <webApp>
                  <descriptor>${dollar}{basedir}/src/main/webapp/WEB-INF/web.xml</descriptor>
                  <resourceBases>
                    <resourceBase>${dollar}{basedir}/src/main/webapp</resourceBase>
                    <resourceBase>${dollar}{webappDirectory}</resourceBase>
                  </resourceBases>
                </webApp>
              </configuration>
            </plugin>
            <plugin>
              <groupId>org.apache.tomcat.maven</groupId>
              <artifactId>tomcat7-maven-plugin</artifactId>
              <configuration>
                <contextFile>${dollar}{basedir}/src/main/tomcatconf/context.xml</contextFile>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
  </profiles>
</project>
